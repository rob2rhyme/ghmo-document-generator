// src/components/InvitationForm.tsx
import React from "react";
import { FormData } from "../App";

interface Props {
  data: FormData;
  setData: React.Dispatch<React.SetStateAction<FormData>>;
}

const dayOptions = [
  "‡§∂‡§®‡§ø‡§¨‡§æ‡§∞",
  "‡§Ü‡§á‡§§‡§¨‡§æ‡§∞",
  "‡§∏‡•ã‡§Æ‡§¨‡§æ‡§∞",
  "‡§Æ‡§ô‡•ç‡§ó‡§≤‡§¨‡§æ‡§∞",
  "‡§¨‡•Å‡§ß‡§¨‡§æ‡§∞",
  "‡§¨‡§ø‡§π‡•Ä‡§¨‡§æ‡§∞",
  "‡§∂‡•Å‡§ï‡•ç‡§∞‡§¨‡§æ‡§∞",
];
const roleOptions = ["‡§Ö‡§ß‡•ç‡§Ø‡§ï‡•ç‡§∑", "‡§Æ‡§π‡§æ‡§∏‡§ö‡§ø‡§µ", "‡§∏‡§ö‡§ø‡§µ", "‡§ï‡•ã‡§∑‡§æ‡§ß‡•ç‡§Ø‡§ï‡•ç‡§∑", "‡§∏‡§¶‡§∏‡•ç‡§Ø"];
const pujaOptions = ["‡§ò‡§∞ ‡§™‡•Ç‡§ú‡§æ", "‡§™‡§∞‡§ø‡§µ‡§æ‡§∞‡§ï‡•ã ‡§∏‡§¶‡§∏‡•ç‡§Ø‡§ï‡•ã ‡§ú‡§®‡•ç‡§Æ‡§¶‡§ø‡§®", "‡§∏‡•Å‡§ß‡§æ‡§à"];

const InvitationForm: React.FC<Props> = ({ data, setData }) => {
  const handleSelect =
    (field: keyof Pick<FormData, "day" | "role" | "pujaType">) =>
    (e: React.ChangeEvent<HTMLSelectElement>) => {
      setData((prev) => ({ ...prev, [field]: e.target.value }));
    };

  const handleChange =
    (field: keyof Pick<FormData, "hostName" | "address" | "date" | "time">) =>
    (e: React.ChangeEvent<HTMLInputElement>) => {
      setData((prev) => ({ ...prev, [field]: e.target.value }));
    };

  return (
    <>
      {/* Header with logo and gradient background */}
      <div
        className="mb-4"
        style={{
          background: "linear-gradient(to right, purple, blue)",
          padding: "1.5rem",
          borderRadius: "0.5rem",
          textAlign: "center",
          color: "#fff",
        }}
      >
        <img
          src="/logo-placeholder.png"
          alt="GHMO Logo"
          style={{ width: "100px", height: "100px", objectFit: "contain" }}
        />
        <h2 className="mt-3 mb-0">GHMO ‡§≠‡§ú‡§® ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ Invitation Generator</h2>
      </div>

      <form>
        <div className="mb-3">
          <label className="form-label">‡§¶‡§ø‡§®</label>
          <select
            className="form-select"
            value={data.day}
            onChange={handleSelect("day")}
          >
            <option value="" disabled>
              ‡§ö‡§Ø‡§® ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç
            </option>
            {dayOptions.map((d) => (
              <option key={d} value={d}>
                {d}
              </option>
            ))}
          </select>
        </div>

        <div className="mb-3">
          <label className="form-label">‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ</label>
          <select
            className="form-select"
            value={data.role}
            onChange={handleSelect("role")}
          >
            <option value="" disabled>
              ‡§ö‡§Ø‡§® ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç
            </option>
            {roleOptions.map((r) => (
              <option key={r} value={r}>
                {r}
              </option>
            ))}
          </select>
        </div>

        <div className="mb-3">
          <label className="form-label">‡§™‡•Ç‡§ú‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞</label>
          <select
            className="form-select"
            value={data.pujaType}
            onChange={handleSelect("pujaType")}
          >
            <option value="" disabled>
              ‡§ö‡§Ø‡§® ‡§ó‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç
            </option>
            {pujaOptions.map((p) => (
              <option key={p} value={p}>
                {p}
              </option>
            ))}
          </select>
        </div>

        <div className="mb-3">
          <label className="form-label">‡§Ü‡§Ø‡•ã‡§ú‡§ï‡§ï‡•ã ‡§®‡§æ‡§Æ</label>
          <input
            type="text"
            className="form-control"
            placeholder="‡§≠‡§ú‡§® ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß‡§ï‡§∞‡•ç‡§§‡§æ‡§ï‡•ã ‡§®‡§æ‡§Æ"
            value={data.hostName}
            onChange={handleChange("hostName")}
          />
        </div>

        <div className="mb-3">
          <label className="form-label">‡§†‡•á‡§ó‡§æ‡§®‡§æ</label>
          <input
            type="text"
            className="form-control"
            placeholder="123 Street Name, City, State, Zip-code"
            value={data.address}
            onChange={handleChange("address")}
          />
        </div>

        <div className="row">
          <div className="col-6 mb-3">
            <label className="form-label">‡§Æ‡§ø‡§§‡§ø</label>
            <div className="input-group">
              <span className="input-group-text">üìÖ</span>
              <input
                type="date"
                className="form-control"
                value={data.date}
                onChange={handleChange("date")}
              />
            </div>
          </div>
          <div className="col-6 mb-3">
            <label className="form-label">‡§∏‡§Æ‡§Ø</label>
            <div className="input-group">
              <span className="input-group-text">‚è∞</span>
              <input
                type="time"
                className="form-control"
                value={data.time}
                onChange={handleChange("time")}
              />
            </div>
          </div>
        </div>
      </form>
    </>
  );
};

export default InvitationForm;
